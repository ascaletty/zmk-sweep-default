/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_italian.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;

    bindings = <&kp>, <&kp>;

    tapping-term-ms = <150>;
    flavor = "tap-preferred";
};

&sk { ignore-modifiers; };

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        combo_accent {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&mo ACCENT>;
        };

        // internal-left & external-right thumb keys

        combo_sym2 {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&to 2>;
        };

        // both left thumb keys

        combo_settings {
            timeout-ms = <300>;
            key-positions = <30 31>;
            bindings = <&mo SETTINGS>;
        };

        home_panic {
            bindings = <&to 0>;
            key-positions = <31 32>;
            layers = <1 3 2 0 5 6>;
        };

        gamer_goo {
            bindings = <&to 4>;
            key-positions = <30 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&mt ESCAPE Q    &kp W           &kp E         &kp R               &kp T        &kp Y          &kp U               &kp I         &kp O           &kp P
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LSHIFT D  &mt F LEFT_CONTROL  &kp G        &kp H          &mt LEFT_CONTROL J  &mt LSHIFT K  &mt LEFT_ALT L  &mt LEFT_WIN SEMICOLON
&kp Z           &kp X           &kp C         &kp V               &kp B        &kp N          &kp M               &kp COMMA     &kp DOT         &kp SLASH
                                              &lt 3 ENTER         &kp SPACE    &kp BACKSPACE  &to SYM
            >;
        };

        // Numbers and high frequency symbols

        numpad {
            bindings = <
&none         &kp GRAVE          &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp MINUS        &kp BSPC  &kp N7  &kp N8  &kp N9  &none
&kp LSHIFT    &kp C_VOL_UP       &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp EQUAL        &kp PLUS  &kp N4  &kp N5  &kp N6  &kp LEFT_SHIFT
&kp IT_GREAT  &kp C_VOLUME_DOWN  &kp COMMA          &kp PERIOD             &kp SEMICOLON    &none     &kp N1  &kp N2  &kp N3  &kp IT_FSLH
                                                    &to 4                  &to 2            &to 3     &to 0
            >;
        };

        // Main modifiers and arrow keys

        ext_layer {
            bindings = <
&kp ESC    &trans     &trans      &trans     &trans       &kp PG_UP     &kp HOME  &kp UP    &kp END    &kp CAPS
&sk LALT   &sk LGUI   &sk LSHIFT  &sk LCTRL  &kp RALT     &kp PG_DN     &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
&kp LC(Z)  &kp LC(X)  &kp LC(C)   &kp LC(V)  &kp TAB      &kp LC(BSPC)  &kp BSPC  &trans    &trans     &trans
                                  &to 0      &kp LCTRL    &kp ENTER     &to FNC
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            bindings = <
&kp F1    &kp F2    &kp F3      &kp F4     &kp F5      &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
&sk LALT  &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT    &kp F11  &kp F12  &kp PRINTSCREEN  &trans  &trans
&none     &none     &none       &none      &none       &none    &none    &none            &none   &none
                                &to 0      &to 0       &to 0    &none
            >;
        };

        // Low frequency symbols.

        gaming_layer {
            bindings = <
&kp IT_CARET      &kp Q  &kp W  &kp E  &kp R               &none  &none  &none  &none  &none
&kp LEFT_SHIFT    &kp A  &kp S  &kp D  &kt LEFT_SHIFT      &none  &none  &none  &none  &none
&kt LEFT_CONTROL  &kp Z  &kp X  &kp C  &kt LEFT_CONTROL    &none  &none  &none  &none  &none
                                &none  &to 0               &none  &none
            >;
        };

        // Used to type regional accents.

        accent_layer {
            bindings = <
&none        &none        &none        &kp IT_CEGR  &none          &none  &none  &none  &none  &none
&kp IT_AGRV  &kp IT_IGRV  &kp IT_OGRV  &kp TILDE    &kp IT_EACU    &none  &none  &none  &none  &none
&none        &none        &none        &kp IT_UGRV  &none          &none  &none  &none  &none  &none
                                       &none        &none          &none  &none
            >;
        };

        // Used to change the keyboard's settings.

        settings_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &unstick  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none     &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none     &none  &none
                           &none       &none           &none         &none
            >;
        };
    };
};
